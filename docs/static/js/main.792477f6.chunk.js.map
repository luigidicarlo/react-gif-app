{"version":3,"sources":["components/AddCategory.js","components/Pulser.js","components/Gif.js","helpers/getGifs.js","components/Category.js","hooks/useFetchGifs.js","components/CategoriesList.js","App.js","index.js"],"names":["AddCategory","categories","setCategories","useState","category","setCategory","formError","setFormError","Fragment","onSubmit","e","preventDefault","trim","length","setTimeout","find","cat","toUpperCase","htmlFor","type","name","onChange","String","target","value","className","Pulser","Gif","url","title","src","alt","getGifs","a","fetch","encodeURI","resp","json","data","images","map","image","id","downsized_medium","Category","isLoading","state","setState","useEffect","then","gifs","useFetchGifs","gif","CategoriesList","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.792477f6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ categories, setCategories }) => {\r\n\tconst [category, setCategory] = useState('');\r\n\tconst [formError, setFormError] = useState('');\r\n\r\n\tconst onChangeCategoryHandler = e => {\r\n\t\tsetCategory(String(e.target.value));\r\n\t};\r\n\r\n\tconst onFormSubmitHandler = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (category.trim().length <= 0) {\r\n\t\t\tsetFormError('You must enter a category name');\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetFormError('');\r\n\t\t\t}, 1500);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst existingCategory = categories.find(\r\n\t\t\tcat => cat.toUpperCase() === category.toUpperCase()\r\n\t\t);\r\n\r\n\t\tif (existingCategory) {\r\n\t\t\tsetFormError('The category already exists');\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetFormError('');\r\n\t\t\t}, 1500);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetCategories([category, ...categories]);\r\n\t\tsetCategory('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<form onSubmit={onFormSubmitHandler}>\r\n\t\t\t\t<label htmlFor=\"category\">Category</label>\r\n\t\t\t\t&nbsp;\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"category\"\r\n\t\t\t\t\tonChange={onChangeCategoryHandler}\r\n\t\t\t\t\tvalue={category}\r\n\t\t\t\t/>\r\n\t\t\t\t<button type=\"submit\">Add</button>\r\n\t\t\t</form>\r\n\t\t\t{formError.length > 0 ? (\r\n\t\t\t\t<span className=\"text-red\">{formError}</span>\r\n\t\t\t) : null}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tcategories: PropTypes.array.isRequired,\r\n\tsetCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\n\r\nconst Pulser = () => {\r\n\treturn <div className=\"Pulser\"></div>;\r\n};\r\nexport default Pulser;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gif = ({ url, title }) => {\r\n\treturn (\r\n\t\t<div className=\"Gif animate__animated animate__fadeIn\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nGif.propTypes = {\r\n\turl: PropTypes.string.isRequired,\r\n\ttitle: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Gif;\r\n","export const getGifs = async (category) => {\r\n\tconst baseUrl = 'https://api.giphy.com/v1/gifs/search';\r\n\tconst apiKey = 'MHd0gjVMwY5UpulmdobDKBE0mIDSqueG';\r\n\tconst url = `${baseUrl}?limit=10&api_key=${apiKey}&q=`;\r\n\tconst resp = await fetch(`${url}${encodeURI(category)}`);\r\n\tconst { data } = await resp.json();\r\n\tconst images = data.map(image => ({\r\n\t\tid: image.id,\r\n\t\turl: image.images?.downsized_medium.url,\r\n\t\ttitle: image.title\r\n\t}));\r\n\r\n\treturn images;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Pulser from './Pulser';\r\nimport Gif from './Gif';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst Category = ({ category }) => {\r\n\tconst { data: gifs, isLoading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h2>{category}</h2>\r\n\r\n\t\t\t{isLoading && <Pulser />}\r\n\r\n\t\t\t{gifs.length > 0 && (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<div className=\"gif-list\">\r\n\t\t\t\t\t\t{gifs.map(gif => (\r\n\t\t\t\t\t\t\t<Gif key={gif.id} {...gif} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)}\r\n\r\n\t\t\t{!gifs.length && (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t{!isLoading && <h4>No GIF images were found</h4>}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nCategory.propTypes = {\r\n\tcategory: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Category;\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = category => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tisLoading: true\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then(gifs => {\r\n\t\t\tsetState({\r\n\t\t\t\tdata: gifs,\r\n\t\t\t\tisLoading: false\r\n\t\t\t});\r\n\t\t});\r\n\t}, [category]) ;\r\n\r\n\treturn state;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Category from './Category';\r\n\r\nconst CategoriesList = ({ categories }) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{categories.length > 0 ? (\r\n\t\t\t\tcategories.map(cat => <Category category={cat} key={cat} />)\r\n\t\t\t) : (\r\n\t\t\t\t<h2>Nothing to show</h2>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nCategoriesList.propTypes = {\r\n\tcategories: PropTypes.array.isRequired\r\n};\r\n\r\nexport default CategoriesList;\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport CategoriesList from './components/CategoriesList';\r\n\r\nconst App = () => {\r\n\tconst [categories, setCategories] = useState([]);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<h2>GIF Expert</h2>\r\n\t\t\t<hr />\r\n\t\t\t<AddCategory categories={categories} setCategories={setCategories} />\r\n\t\t\t<CategoriesList categories={categories} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}